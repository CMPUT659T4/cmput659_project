% Hints for MRF usage

        MRFC_learn
	MRFC_predict




         case 'mrf'
            model = MRFC_learn(X_train, Y_train, method, lambdas);  %learn MRF classifier (MRFC)
            [predicted_Y,pyx] = MRFC_predict(X_test,model); %test MRFC   features_used = ranked_features(1:top_features); 

            outf = sprintf('results/pr_%s_top%d_model_fold%dout_of%d_%s',lower(classifier),top_features,fold,folds,in_fnm);
            save(outf, 'pyx');

            %predicted_Y = MRFC_predict_varsel(X_test,model); 
            % loglik(fold,Y_test(1)) = MRFC_loglik(X_test,Y_test,model);




%        case 'mrf_cvlambda'
%          %model = MRFC_CVlambda_learn(X_train, Y_train, method, lambda);  %learn MRF classifier (MRFC)
%          %predicted_Y = MRFC_predict(X_test,model); %test MRFC                 
%           min_err = Inf;  
%             
%           for lambda1=lambdas
%               for lambda2 = lambdas
%                     model = MRFC_learn(X_train, Y_train, method, lambda1,lambda2);  %learn MRF classifier (MRFC)
%                     predicted_Y = MRFC_predict(X_test,model); %test MRFC    
%                     
%                     FPerr = size(find(predicted_Y > 0 & Y_test < 0 ),1);
%                     FNerr = size(find(predicted_Y < 0 & Y_test > 0 ),1);
%                     err = FPerr +FNerr;
%                     
%                     if err < min_err
%                         min_err=err; 
%                         best_model=model;
%                         best_pred = predicted_Y;
%                     end                         
%               end
%            end
%             
%             model=best_model; predicted_Y = best_pred;

